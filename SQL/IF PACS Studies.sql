USE "BI Staging";
SET CONCAT_NULL_YIELDS_NULL OFF

SELECT
IF_STUDY.STUDY_KEY as STUDY_ID				--We will need to generate our own PKs, of course.
,NULL as STUDY_CHARGE_ID
,IF_STUDY.STUDY_ID as STUDY_INTERNAL_ID
,ACCESS_NO as ACCESSION_NUM
,'Infinitt' as STUDY_SOURCE
,CASE
WHEN INSTITUTION LIKE 'ACCESS HEALTHCARE' THEN 'UVR'
WHEN INSTITUTION LIKE 'ADVANCED SPORTS AND ORTHOPEDICS' THEN 'UVR'
WHEN INSTITUTION LIKE 'BYUHC' THEN 'UVR'
WHEN INSTITUTION LIKE 'CASTLEVIEW HOSPITAL' THEN 'UVR'
WHEN INSTITUTION LIKE 'CEDAR ORTHOPEDIC SURGERY' THEN 'SG'
WHEN INSTITUTION LIKE 'CORAL DESERT IMAGING' THEN 'CD'
WHEN INSTITUTION LIKE 'DESERT VIEW HOSPITAL' THEN 'DV'
WHEN INSTITUTION LIKE 'INTERMOUNTAIN VEIN CENTER' THEN 'IVC'
WHEN INSTITUTION LIKE 'MOBILE DIAGNOSTIC ULTRASOUND' THEN 'UVR'
WHEN INSTITUTION LIKE 'PACIFIC MOBILE DIAGNOISTICS' THEN 'UVR'
WHEN INSTITUTION LIKE 'PACIFIC MOBILE DIAGNOSTIC' THEN 'UVR'
WHEN INSTITUTION LIKE 'PACIFIC MOBILE DIAGNOSTICS' THEN 'UVR'
WHEN INSTITUTION LIKE 'PREMIER FAMILY MEDICAL' THEN 'UVR'
WHEN INSTITUTION LIKE 'RED SANDS VEIN AND LASER INSTITUTE' THEN 'RSVC'
WHEN INSTITUTION LIKE 'RIVERWOODS URGENT CARE' THEN 'RW'
WHEN INSTITUTION LIKE 'SAN JUAN CLINIC' THEN 'SJ'
WHEN INSTITUTION LIKE 'SAN JUAN HOSPITAL' THEN 'SJ'
WHEN INSTITUTION LIKE 'ST GEORGE RADIOLOGY' THEN 'SG'
WHEN INSTITUTION LIKE 'TOOELE VALLEY IMAGING' THEN 'SG'
WHEN INSTITUTION LIKE 'UINTAH BASIN MEDICAL CLINIC' THEN 'UVR'
WHEN INSTITUTION LIKE 'UTAH NEUROSURGERY' THEN 'SG'
WHEN INSTITUTION LIKE 'UTAH VALLEY IMAGING' THEN 'UVI'
WHEN INSTITUTION LIKE 'UTAH VALLEY PEDIATRICS' THEN 'UVP'
WHEN INSTITUTION LIKE 'UTAH VALLEY SPECIALTY HOSPITAL' THEN 'UVR'
END as STUDY_ENTITY
,CASE
WHEN INSTITUTION LIKE 'ACCESS HEALTHCARE' THEN 'URA Hospitals'
WHEN INSTITUTION LIKE 'ADVANCED SPORTS AND ORTHOPEDICS' THEN 'URA Hospitals'
WHEN INSTITUTION LIKE 'BYUHC' THEN 'URA Hospitals'
WHEN INSTITUTION LIKE 'CASTLEVIEW HOSPITAL' THEN 'URA Hospitals'
WHEN INSTITUTION LIKE 'CEDAR ORTHOPEDIC SURGERY' THEN 'St. George'
WHEN INSTITUTION LIKE 'CORAL DESERT IMAGING' THEN 'Coral Desert'
WHEN INSTITUTION LIKE 'DESERT VIEW HOSPITAL' THEN 'Desert View Hospital'
WHEN INSTITUTION LIKE 'INTERMOUNTAIN VEIN CENTER' THEN 'Intermountain Vein Center'
WHEN INSTITUTION LIKE 'MOBILE DIAGNOSTIC ULTRASOUND' THEN 'URA Hospitals'
WHEN INSTITUTION LIKE 'PACIFIC MOBILE DIAGNOISTICS' THEN 'URA Hospitals'
WHEN INSTITUTION LIKE 'PACIFIC MOBILE DIAGNOSTIC' THEN 'URA Hospitals'
WHEN INSTITUTION LIKE 'PACIFIC MOBILE DIAGNOSTICS' THEN 'URA Hospitals'
WHEN INSTITUTION LIKE 'PREMIER FAMILY MEDICAL' THEN 'URA Hospitals'
WHEN INSTITUTION LIKE 'RED SANDS VEIN AND LASER INSTITUTE' THEN 'Red Sands Vein Center'
WHEN INSTITUTION LIKE 'RIVERWOODS URGENT CARE' THEN 'Riverwoods'
WHEN INSTITUTION LIKE 'SAN JUAN CLINIC' THEN 'San Juan'
WHEN INSTITUTION LIKE 'SAN JUAN HOSPITAL' THEN 'San Juan'
WHEN INSTITUTION LIKE 'ST GEORGE RADIOLOGY' THEN 'St. George'
WHEN INSTITUTION LIKE 'TOOELE VALLEY IMAGING' THEN 'St. George'
WHEN INSTITUTION LIKE 'UINTAH BASIN MEDICAL CLINIC' THEN 'URA Hospitals'
WHEN INSTITUTION LIKE 'UTAH NEUROSURGERY' THEN 'St. George'
WHEN INSTITUTION LIKE 'UTAH VALLEY IMAGING' THEN 'Utah Valley Imaging'
WHEN INSTITUTION LIKE 'UTAH VALLEY PEDIATRICS' THEN 'Utah Valley Pediatrics'
WHEN INSTITUTION LIKE 'UTAH VALLEY SPECIALTY HOSPITAL' THEN 'URA Hospitals'
END as STUDY_ENTITY_NAME
,IF_STUDY.INSTITUTION as STUDY_SPEC_LOCATION
,IF_STUDY.INSTITUTION as STUDY_LOCATION
,IF_STUDY.REQUEST_CODE as EXAM_CODE
,IF_STUDY.STUDY_DESC as EXAM_CODE_DESC
,ISNULL(PlanValue.CPTCODE_ID, PlanVers.CPTCODE_ID) as STUDY_CPT_CODE_ID
,ISNULL(PlanValue.CPTCODE, PlanVers.CPTCODE) as STUDY_CPT_CODE
,ISNULL(PlanValue.CPTCODE_DESC, PlanVers.CPTCODE_DESC) as STUDY_CPT_CODE_DESC
,CASE
WHEN IF_STUDY.MODALITIES LIKE '%PT%' THEN 'PET'
WHEN IF_STUDY.MODALITIES LIKE '%RF%' THEN 'FL'
WHEN IF_STUDY.MODALITIES LIKE '%FL%' THEN 'FL'
WHEN IF_STUDY.MODALITIES LIKE '%IR%' THEN 'FL'
WHEN IF_STUDY.MODALITIES LIKE '%XA%' THEN 'FL'
WHEN IF_STUDY.MODALITIES LIKE '%MR%' THEN 'MR'
WHEN IF_STUDY.MODALITIES LIKE '%MA%' THEN 'MR'
WHEN IF_STUDY.MODALITIES LIKE '%NM%' THEN 'NM'
WHEN IF_STUDY.MODALITIES LIKE '%CT%' THEN 'CT'
WHEN IF_STUDY.MODALITIES LIKE '%US%' THEN 'US'
WHEN IF_STUDY.MODALITIES LIKE '%MG%' THEN 'Mammo'
WHEN IF_STUDY.MODALITIES LIKE '%CR%' THEN 'XRay'
WHEN IF_STUDY.MODALITIES LIKE '%DX%' THEN 'XRay'
WHEN IF_STUDY.MODALITIES LIKE '%XR%' THEN 'XRay'
ELSE 'Unknown'
END as MODALITY
,STUDY_PRIORITY as [PRIORITY]
,ORDER_DTTM as ORDERED_TIME
,ORDER_CREATION_DTTM as ORDER_RECIEVED_TIME
,IF_MSPS_2.SPS_START_DTTM as SCHEDULED_TIME
,IF_MSPS_2.ARRIVE_DTTM as PATIENT_CHECK_IN
,IF_MSPS_2.VALIDATE_DTTM as PATIENT_CHECK_OUT
,IF_STUDY.STUDY_DTTM as EXAM_START
,IF_STUDY.CREATION_DTTM as EXAM_COMPLETE
,UploadStart as UPLOAD_START
,UploadEnd as UPLOAD_END
,IF_STUDY.VALIDATE_DTTM as EXAM_AVAILABLE
,Dictation.Start as DICTATION_START
,DictationEnd.DICTATION_END as DICTATION_END
,DictationEnd.DICTATION_PROCESSED as DICTATION_PROCESSED
,DATEDIFF(minute, IF_STUDY.STUDY_DTTM, IF_STUDY.CREATION_DTTM) as EXAM_TIME
,DATEDIFF(minute, IF_STUDY.CREATION_DTTM, IF_STUDY.VALIDATE_DTTM) as EXAM_PROCESSING_TIME
,DATEDIFF(minute, IF_STUDY.VALIDATE_DTTM, Dictation.Start) as TIME_TO_READING_START
,DATEDIFF(minute, Dictation.Start, DictationEnd.DICTATION_END) as READING_START_TO_END
,DATEDIFF(minute, IF_STUDY.VALIDATE_DTTM, DictationEnd.DICTATION_PROCESSED) as TURNAROUND_TIME
,Dictation.ReadTime as READ_TIME
,REPLACE(Technician.USER_NAME, '^', ' ') as ACQUIRING_TECH
,REPLACE(Reading.USER_NAME, '^', ' ') as READING_PHY
,REPLACE(Approver.USER_NAME, '^', ' ') as APPROVING_PHY
,CASE
WHEN Ordering.USER_NAME LIKE '%Jeff%' AND Ordering.USER_NAME LIKE '%Pierson%' THEN 'Pierson, Jeff'
WHEN Ordering.USER_NAME LIKE '%Karee%' AND Ordering.USER_NAME LIKE '%Yates%' THEN 'Yates, Karee'
WHEN Ordering.USER_NAME LIKE '%Megan%' AND Ordering.USER_NAME LIKE '%Jensen%' THEN 'Jensen, Megan'
WHEN Ordering.USER_NAME LIKE '%Travis%' AND Ordering.USER_NAME LIKE '%Dimond%' THEN 'Dimond, Travis'
WHEN Ordering.USER_NAME LIKE '%Michael%' AND Ordering.USER_NAME LIKE '%Francis%' THEN 'Francis, Michael'
WHEN Ordering.USER_NAME LIKE '%John%' AND Ordering.USER_NAME LIKE '%Manwaring%' THEN 'Manwaring, John'
WHEN Ordering.USER_NAME LIKE '%Adam%' AND Ordering.USER_NAME LIKE '%Wright%' THEN 'Wright, Adam'
END as STUDY_REF_MIDLEVEL
,REPLACE(Referring.USER_NAME, '^', ' ') as STUDY_REF_PHY
,ZZ_Contact.LKL3__SPECIALTY_1__C as STUDY_REF_SPCLTY
,TaskAccount.NAME as STUDY_REF_ORG
,TaskAccount.LKL3__Practice_Type__c as STUDY_REF_ORG_TYPE
,ISNULL(ParentAccount.NAME, TaskAccount.NAME) as STUDY_REF_PARENT_ORG
,TaskAccount.GROUP__C as STUDY_REF_MED_GROUP
,LEFT(ZZ_Contact.MAILINGPOSTALCODE, 5) as STUDY_REF_ZIP
,ReferringZIP.FIPS as STUDY_REF_FIPS
,ReferringZIP.[STATE] as STUDY_REF_STATE
,NULL as STUDY_DIAG_CODE1
,NULL as STUDY_DIAG_CODE2
,NULL as STUDY_DIAG_CODE3
,NULL as STUDY_DIAG_CODE4
,NULL as STUDY_DIAG_CODES
,IF_IORDER.ORDER_REASON as STUDY_DIAGNOSIS
,InsPrimary as STUDY_PRIM_INSUR
,FinancialClassPrimary as STUDY_PRIM_FIN_CLASS
,InsSecondary as STUDY_SEC_INSUR
,FinancialClassSecondary as STUDY_SEC_FIN_CLASS
,InsTertiary as STUDY_TER_INSUR
,FinancialClassTertiary as STUDY_TER_FIN_CLASS
,NULL as STUDY_EMPI_NUM
,NULL as STUDY_MEMBER_NUM
,IF_STUDY.PATIENT_ID as STUDY_PATIENT_ID
,IF_STUDY.PATIENT_ACCOUNT_NO as STUDY_ACCOUNT_NUM
,IF_PATIENT.LAST_NAME + ', ' + IF_PATIENT.FIRST_NAME + 
	CASE
	WHEN IF_PATIENT.MIDDLE_NAME IS NOT NULL THEN ' ' + IF_PATIENT.MIDDLE_NAME
	ELSE NULL
	END
 as STUDY_PATIENT_NAME
,IF_PATIENT.LAST_NAME as STUDY_PATIENT_LAST_NAME
,IF_PATIENT.FIRST_NAME as STUDY_PATIENT_FIRST_NAME
,IF_PATIENT.MIDDLE_NAME as STUDY_PATIENT_MID_NAME
,IF_STUDY.PATIENT_SEX as STUDY_GENDER
,IF_STUDY.PATIENT_BIRTH_DTTM as STUDY_DOB
,DATEDIFF(YEAR, IF_STUDY.PATIENT_BIRTH_DTTM, IF_STUDY.CREATION_DTTM) as STUDY_AGE
,CASE
WHEN DATEDIFF(YEAR, IF_STUDY.PATIENT_BIRTH_DTTM, IF_STUDY.CREATION_DTTM) <= 14 THEN 1
ELSE 0
END as STUDY_PEDIATRIC
,InsPrimary as STUDY_PATIENT_INS
,FinancialClassPrimary as STUDY_PATIENT_FIN_CLASS
,IF_PATIENT.ZIPCODE as STUDY_PATIENT_ZIP
,PatientZIP.FIPS as STUDY_PATIENT_FIPS
,PatientZIP.[STATE] as STUDY_PATIENT_STATE
,IF_STUDY.PATIENT_SIZE as PATIENT_HEIGHT
,IF_STUDY.PATIENT_WEIGHT as PATIENT_WEIGHT
,ALLERGY_COMMENTS + CHAR(13) + CONTRAST_ALLERGIES as PATIENT_ALLERGIES
,NULL as PATIENT_TYPE
,IF_EXAMSTAT.STAT_MEANING as [STATUS]
,INSTANCE_COUNT as NUM_OF_IMAGES
,IF_PATIENT.CONFIDENTIALITY as CONFIDENTIALITY
,Addendum_Count as ADDENDUM_COUNT
,IF_STUDY.STUDY_COMMENTS + CHAR(13) + IF_STUDY.SPECIAL_NEEDS + CHAR(13) + IF_REPORT.DICTATION_COMMENTS as STUDY_COMMENTS
,MEDICAL_ALERTS + CHAR(13) + IF_PATIENT.SPECIAL_NEEDS as PATIENT_COMMENTS


FROM
IF_STUDY
LEFT JOIN IF_MSPS_2
ON IF_STUDY.STUDY_KEY = IF_MSPS_2.STUDY_KEY
LEFT JOIN IF_USERS as "Technician"
ON IF_MSPS_2.PERFORM_DOCTOR_KEY = Technician.USER_KEY
LEFT JOIN (
	SELECT
	MIN(REPORT_KEY) as REPORT_KEY
	,CASE
	WHEN COUNT(*) > 1 THEN COUNT(*) - 1
	ELSE 0
	END as Addendum_Count
	,STUDY_KEY
	FROM
	IF_REPORT
	WHERE DICTATE_DTTM IS NOT NULL
	GROUP BY STUDY_KEY
) as "ReportLink"
ON IF_STUDY.STUDY_KEY = ReportLink.STUDY_KEY
LEFT JOIN IF_REPORT
ON ReportLink.REPORT_KEY = IF_REPORT.REPORT_KEY
LEFT JOIN IF_USERS as "Reading"
ON IF_REPORT.DICTATOR_KEY = Reading.USER_KEY
LEFT JOIN IF_IORDER
ON IF_STUDY.ORDER_KEY = IF_IORDER.ORDER_KEY
LEFT JOIN IF_USERS as "Referring"
ON IF_IORDER.REFER_DOCTOR_KEY = Referring.USER_KEY
LEFT JOIN IF_USERS as "Ordering"
ON IF_IORDER.ORDER_DOCTOR_KEY = Ordering.USER_KEY
LEFT JOIN IF_VISIT
ON IF_IORDER.VISIT_KEY = IF_VISIT.VISIT_KEY
LEFT JOIN IF_PATIENT
ON IF_VISIT.PATIENT_KEY = IF_PATIENT.PATIENT_KEY
LEFT JOIN IF_PROCPLAN
ON IF_STUDY.PROCPLAN_KEY = IF_PROCPLAN.PROCPLAN_KEY
LEFT JOIN RVUS as PlanValue
ON IF_PROCPLAN.CODE_VALUE LIKE PlanValue.CPTCODE AND LEN(PlanValue.CPTCODE) = 5
LEFT JOIN RVUS as PlanVers
ON IF_PROCPLAN.CODE_VERSION LIKE PlanVers.CPTCODE AND LEN(PlanVers.CPTCODE) = 5
LEFT JOIN IF_USERS as "Approver"
ON IF_REPORT.APPROVER_KEY = Approver.USER_KEY
LEFT JOIN IF_EXAMSTAT
ON IF_STUDY.STUDY_STAT = IF_EXAMSTAT.STAT_CODE
LEFT JOIN (
	SELECT
	Linked.STUDY_KEY
	,Linked.USERID
	,MIN(Linked.Start) as Start
	,SUM(
		DATEDIFF(SECOND, Linked.Start, Halt)/60
	) as ReadTime

	FROM (
		SELECT
		Start.USERID
		,Start.STUDY_KEY
		,Start.LOG_DTTM as Start
		,MIN(Halt.LOG_DTTM) as Halt

		FROM
		IF_AUDITLOG as Start
		LEFT JOIN (
			SELECT
			STUDY_KEY
			,MIN(AUDITLOG_KEY) as AUDITLOG_KEY
			FROM
			IF_AUDITLOG
			WHERE AUDITCODE_KEY = 230
			GROUP BY STUDY_KEY
		) as Signed
		ON Start.STUDY_KEY = Signed.STUDY_KEY AND Start.AUDITLOG_KEY < Signed.AUDITLOG_KEY
		LEFT JOIN IF_AUDITLOG as Halt
		ON Start.AUDITLOG_KEY < Halt.AUDITLOG_KEY
				AND Start.USERID = Halt.USERID
				AND Halt.AUDITLOG_KEY <= Signed.AUDITLOG_KEY
			
		WHERE Signed.AUDITLOG_KEY IS NOT NULL
			AND
			(Start.AUDITCODE_KEY = 23
				OR Start.AUDITCODE_KEY = 224
				OR Start.AUDITCODE_KEY = 227)
			AND
			(Halt.AUDITCODE_KEY = 49
				OR Halt.AUDITCODE_KEY = 111
				OR Halt.AUDITCODE_KEY = 116
				OR Halt.AUDITCODE_KEY = 226
				OR Halt.AUDITCODE_KEY = 228
				OR Halt.AUDITCODE_KEY = 229
				OR Halt.AUDITCODE_KEY = 230
				OR Halt.AUDITCODE_KEY = 23
				OR Halt.AUDITCODE_KEY = 224
				OR Halt.AUDITCODE_KEY = 227)

		GROUP BY
		Start.AUDITLOG_KEY
		,Start.USERID
		,Start.STUDY_KEY
		,Start.LOG_DTTM

	) as Linked

	GROUP BY Linked.STUDY_KEY
	,Linked.USERID

) as Dictation
ON IF_STUDY.STUDY_KEY = Dictation.STUDY_KEY AND Reading.USERID = Dictation.USERID
LEFT JOIN (
	SELECT
	IF_AUDITLOG.STUDY_KEY
	,MIN(CASE
		WHEN IF_AUDITLOG.AUDITCODE_KEY = 230
		THEN LOG_DTTM
		END) as DICTATION_END
	,MIN(CASE
		WHEN IF_AUDITLOG.AUDITCODE_KEY = 236
		THEN LOG_DTTM
		END) as DICTATION_PROCESSED

	FROM IF_AUDITLOG
	WHERE IF_AUDITLOG.AUDITCODE_KEY = 230 OR IF_AUDITLOG.AUDITCODE_KEY = 236 OR IF_AUDITLOG.AUDITCODE_KEY = 93

	GROUP BY
	STUDY_KEY

) DictationEnd
ON IF_STUDY.STUDY_KEY = DictationEnd.STUDY_KEY
LEFT JOIN SS_Zip2FIPS as PatientZIP
ON LEFT(IF_PATIENT.ZIPCODE, 5) LIKE PatientZIP.ZIP_String
--LEFT JOIN (
--	SELECT
--	DRNAME
--	,DRNUM
--	,DRUPIN
--	,ROW_NUMBER() OVER (PARTITION BY DRNUM, LEFT(DRNAME, 4) ORDER BY NumOf) as HowCommonRank
--	FROM (
--		SELECT
--		DRNAME
--		,DRNUM
--		,DRUPIN
--		,COUNT(*) as NumOf
--		FROM
--		CPU_DOCTR
--		LEFT JOIN CPU_TRANS
--		ON DRNUM = TRREF# AND CPU_DOCTR.Entity LIKE CPU_TRANS.Entity
--		WHERE DRUPIN NOT LIKE '          '
--		GROUP BY
--		DRNAME
--		,DRNUM
--		,DRUPIN
--	) x
--) as DOCTR
--ON NOT (LEN(Referring.LICENSE_NO) = 10 AND ISNUMERIC(Referring.LICENSE_NO) = 1)	--Checking to see if LICENSE_NO is an NPI
--AND DOCTR.HowCommonRank = 1
--AND Referring.USERID LIKE DOCTR.DRNUM
--AND LEFT(Referring.LAST_NAME, 4) LIKE LEFT(DOCTR.DRNAME, 4)
LEFT JOIN ZZ_Contact
ON ZZ_Contact.LKL3__NPI__C NOT LIKE ''
AND Referring.LICENSE_NO LIKE ZZ_Contact.LKL3__NPI__C
LEFT JOIN ZZ_Account as TaskAccount
ON ZZ_Contact.ACCOUNTID LIKE TaskAccount.ID
LEFT JOIN ZZ_Account as ParentAccount
ON TaskAccount.PARENTID LIKE ParentAccount.ID
LEFT JOIN SS_Zip2FIPS as ReferringZIP
ON LEFT(ZZ_Contact.MAILINGPOSTALCODE, 5) LIKE ReferringZIP.ZIP_String
LEFT JOIN (
	SELECT
	PATIENT_KEY
	,MIN(CASE WHEN InsPriority = 1 THEN INSURANCE_NAME END) as InsPrimary
	,MIN(CASE WHEN InsPriority = 1 THEN FinancialClass END) as FinancialClassPrimary
	,MIN(CASE WHEN InsPriority = 2 THEN INSURANCE_NAME END) as InsSecondary
	,MIN(CASE WHEN InsPriority = 2 THEN FinancialClass END) as FinancialClassSecondary
	,MIN(CASE WHEN InsPriority = 3 THEN INSURANCE_NAME END) as InsTertiary
	,MIN(CASE WHEN InsPriority = 3 THEN FinancialClass END) as FinancialClassTertiary
	FROM (
		SELECT
		IF_PATIENTINSURANCE.INSURANCE_NAME
		,PATIENT_KEY
		,ROW_NUMBER() OVER (PARTITION BY PATIENT_KEY ORDER BY CASE WHEN INSURANCE_NO IS NULL THEN 99 ELSE INSURANCE_NO END DESC) as InsPriority
		,CASE
		WHEN INSURANCE_NAME LIKE '%Medicare%' THEN 'Medicare'
		WHEN INSURANCE_NAME LIKE '%MDCR%' THEN 'Medicare'
		WHEN INSURANCE_NAME LIKE '%MDR%' THEN 'Medicare'
		WHEN INSURANCE_NAME LIKE '%Medadvantage%' THEN 'Medicare'
		WHEN INSURANCE_NAME LIKE '%Med Advantage%' THEN 'Medicare'
		WHEN INSURANCE_NAME LIKE '%MCARE%' THEN 'Medicare'
		WHEN INSURANCE_NAME LIKE '%SENIOR DIMENSIONS%' THEN 'Medicare'
		WHEN INSURANCE_NAME LIKE '%MEDCARE%' THEN 'Medicare'
		WHEN INSURANCE_NAME LIKE '%MEDICA%' THEN 'Medicare'
		WHEN INSURANCE_NAME LIKE '%MCRE%' THEN 'Medicare'
		WHEN INSURANCE_NAME LIKE '%MEDCR%' THEN 'Medicare'
		WHEN INSURANCE_NAME LIKE '%MDCARE%' THEN 'Medicare'
		WHEN INSURANCE_NAME LIKE '%UNITED MINE WORKERS%' THEN 'Medicare'
		WHEN INSURANCE_NAME LIKE '%UMWA%' THEN 'Medicare'
		WHEN INSURANCE_NAME LIKE '%COMMUNITY CLINIC%' THEN 'Commercial Insurance'
		WHEN INSURANCE_NAME LIKE '%ACCESS%' THEN 'Medicaid'
		WHEN INSURANCE_NAME LIKE '%AHCCCS%' THEN 'Medicaid'
		WHEN INSURANCE_NAME LIKE '%APIPA%' THEN 'Medicaid'
		WHEN INSURANCE_NAME LIKE '%MEDICAID%' THEN 'Medicaid'
		WHEN INSURANCE_NAME LIKE '%ACCCESS%' THEN 'Medicaid'
		WHEN INSURANCE_NAME LIKE '%Community%' THEN 'Medicaid'
		WHEN INSURANCE_NAME LIKE '%Health Choice%' THEN 'Medicaid'
		WHEN INSURANCE_NAME LIKE '%Med Utah%' THEN 'Medicaid'
		WHEN INSURANCE_NAME LIKE '%MEDI-CAL%' THEN 'Medicaid'
		WHEN INSURANCE_NAME LIKE '%MERCY CARE%' THEN 'Medicaid'
		WHEN INSURANCE_NAME LIKE '%MOLINA%' THEN 'Medicaid'
		WHEN INSURANCE_NAME LIKE '%MCAID%' THEN 'Medicaid'
		WHEN INSURANCE_NAME LIKE 'Select%' THEN 'Select Health'
		WHEN INSURANCE_NAME LIKE '%BCBS%' THEN 'Blue Cross/Shield'
		WHEN INSURANCE_NAME LIKE '%Blue%' THEN 'Blue Cross/Shield'
		WHEN INSURANCE_NAME LIKE '%HEALTH WISE%' THEN 'Blue Cross/Shield'
		WHEN INSURANCE_NAME LIKE '%OPERATING ENG%' THEN 'Blue Cross/Shield'
		WHEN INSURANCE_NAME LIKE '' THEN 'Self Pay'
		WHEN INSURANCE_NAME LIKE '%Self Pay%' THEN 'Self Pay'
		WHEN INSURANCE_NAME LIKE '%UHC%' THEN 'United Healthcare'
		WHEN INSURANCE_NAME LIKE '%United%' THEN 'United Healthcare'
		WHEN INSURANCE_NAME LIKE '%Public Emp%' THEN 'PEHP'
		WHEN INSURANCE_NAME LIKE '%PEHP%' THEN 'PEHP'
		WHEN INSURANCE_NAME LIKE '%Deseret%' THEN 'DMBA'
		WHEN INSURANCE_NAME LIKE '%Missionary%' THEN 'DMBA'
		WHEN INSURANCE_NAME LIKE '%Educators%' THEN 'EMIA'
		WHEN INSURANCE_NAME LIKE '%Aetna%' THEN 'Aetna/Altius'
		WHEN INSURANCE_NAME LIKE '%Altius%' THEN 'Aetna/Altius'
		WHEN INSURANCE_NAME LIKE '%ChampVA%' THEN 'Tricare'
		WHEN INSURANCE_NAME LIKE '%Tricare%' THEN 'Tricare'
		WHEN INSURANCE_NAME LIKE '%Triwest%' THEN 'Tricare'
		WHEN INSURANCE_NAME LIKE '%ChampUS%' THEN 'Tricare'
		WHEN INSURANCE_NAME LIKE '%Cigna%' THEN 'Cigna'
		WHEN INSURANCE_NAME LIKE '%WC%' THEN 'Workers Comp'
		WHEN INSURANCE_NAME LIKE '%Risk%' THEN 'Workers Comp'
		WHEN INSURANCE_NAME LIKE '%Safety%' THEN 'Workers Comp'
		WHEN INSURANCE_NAME LIKE '%Dept of Labor%' THEN 'Workers Comp'
		WHEN INSURANCE_NAME LIKE '%One Call Medical%' THEN 'Workers Comp'
		WHEN INSURANCE_NAME LIKE '%State Ins Sys Nev%' THEN 'Workers Comp'
		WHEN INSURANCE_NAME LIKE '%W/C%' THEN 'Workers Comp'
		WHEN INSURANCE_NAME LIKE '%Travelers%' THEN 'Workers Comp'
		WHEN INSURANCE_NAME LIKE '%Walmart%' THEN 'Workers Comp'
		WHEN INSURANCE_NAME LIKE '%Work Med%' THEN 'Workers Comp'
		WHEN INSURANCE_NAME LIKE '%Workers Comp%' THEN 'Workers Comp'
		WHEN INSURANCE_NAME LIKE '%Workers Comp%' THEN 'Workers Comp'
		WHEN INSURANCE_NAME LIKE '%Humana%' THEN 'Humana'
		WHEN INSURANCE_NAME LIKE '%Beech%' THEN 'Beech Street'
		WHEN INSURANCE_NAME LIKE '%Lien%' THEN 'Lien Work'
		WHEN INSURANCE_NAME LIKE '%OFSG%' THEN 'Lien Work'
		ELSE 'Commercial Insurance'
		END as FinancialClass

		FROM
		IF_PATIENTINSURANCE
	) x
	GROUP BY PATIENT_KEY
) as Insurance
ON IF_IORDER.PATIENT_KEY = Insurance.PATIENT_KEY
LEFT JOIN (
	SELECT
	INST.STUDY_KEY
	,MIN(INST.CONTENT_DTTM) as UploadStart
	,MAX(INST.CONTENT_DTTM) as UploadEnd
	FROM
	IF_INSTANCE AS "INST"

	GROUP BY INST.STUDY_KEY

) as ImageUpload
ON IF_STUDY.STUDY_KEY = ImageUpload.STUDY_KEY

WHERE IF_STUDY.ORDER_KEY IS NOT NULL
AND Approver.USER_NAME NOT LIKE 'ADMINISTRATOR'
AND IF_STUDY.MODALITIES NOT LIKE '%AU%'
AND IF_STUDY.MODALITIES NOT LIKE '%ES%'
AND Reading.USER_NAME NOT LIKE 'WATSON^JEFF%'
AND Reading.USER_NAME NOT LIKE 'THORNTON^LAYNE%'